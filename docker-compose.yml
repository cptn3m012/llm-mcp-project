services:
  # 1. Postgres
  pg:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: llm_user
      POSTGRES_PASSWORD: llm_pass
      POSTGRES_DB: llm_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U llm_user -d llm_db"]
      interval: 5s
      retries: 10
    networks: [llmnet]

  # 2. MCP-Postgres: warstwa REST nad tą samą bazą
  mcp_postgres:
    build: ./mcp-servers/postgres
    environment:
      MCP_POSTGRES_DSN: postgres://llm_user:llm_pass@pg:5432/llm_db
    depends_on:
      pg:
        condition: service_healthy
    ports:
      - "3330:3330"
    networks: [llmnet]

  # 3. Backend FastAPI
  backend:
    build: ./backend
    env_file: ./backend/.env
    depends_on:
      mcp_postgres:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    networks: [llmnet]

  # 4. Webowy klient bazy danych
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks: [llmnet]

networks:
  llmnet:
    driver: bridge

volumes:
  pgdata:
